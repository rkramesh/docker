version: '3.7'
services:
    rpi-monitor:
        devices:
            - /dev/vchiq
            - /dev/vcs
        volumes:
            - '/opt/vc:/opt/vc'
            - '/boot:/boot'
            - '/sys:/dockerhost/sys:ro'
            - '/etc:/dockerhost/etc:ro'
            - '/proc:/dockerhost/proc:ro'
            - '/usr/lib:/dockerhost/usr/lib:ro'
        ports:
            - '8888:8888'
        container_name: rpi-monitor
        image: 'michaelmiklis/rpi-monitor:latest'        
#    rknginx:
#        container_name: rknginx
#        image: 'rkramesh/nginx-proxy-manager:latest'
#        restart: unless-stopped
#        ports:
#         - '80:80'
#         - '81:81'
#         - '443:443'
#        volumes:
#          - ./data:/data
#          - ./letsencrypt:/etc/letsencrypt        

    portainer-ce:
        ports:
            - '9000:9000'
        container_name: portainer
        restart: unless-stopped
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
            - /'portainer_data:/data'
        image: 'portainer/portainer-ce:latest'            
    nginx:
        container_name: rknginx
        ports:
            - '80:80'
        image: 'rkramesh/nginx:v1'
        restart: unless-stopped
    dockerevents:
        container_name: DockerEvents
        environment:
            - TELEGRAM_API_TOKEN=${UK_BOT_TOKEN}
            - TELEGRAM_GROUP_ID=${CHAT_ID}
        volumes:
            - '/etc/localtime:/etc/localtime:ro'
            - '/etc/timezone:/etc/timezone:ro'
            - '/var/run/docker.sock:/var/run/docker.sock:ro'
            - '/etc/hostname:/etc/hostname:ro'
        restart: always
        image: 'julyighor/dockerevents:latest'
    rpi-readymedia:
        container_name: readymedia
        restart: always
        volumes:
            - '/media:/data/media'
        network_mode: host
        image: rkramesh/minidlna        
#    minidlna:
#        container_name: rkminidlna
#        network_mode: host
#        volumes:
#            - '/media:/media'
#        ports:
#            - '8200:8200'
#        environment:
#             - MINIDLNA_MEDIA_DIR=/media
#             - MINIDLNA_LISTENING_IP=host
#             - MINIDLNA_PORT=8200
#             - MINIDLNA_FRIENDLY_NAME=rkdlna
#               #   restart: always
#        image: vladgh/minidlna
    aria2-rpi:
        container_name: aria2
        ports:
            - '8082:80'
            - '6800:6800'
        volumes:
            - '/:/data'
            - '/media:/media'
        restart: always
        image: rkramesh/aria2-rpi
    rkeye:
        container_name: rkeye
        ports:
            - '8765:8765'
        hostname: rkeye
        volumes:
            - '/etc/localtime:/etc/localtime:ro'
            - '/media:/media'
            - '/etc/motioneye:/etc/motioneye'
            - '/data/output:/data/output'
        restart: always
        devices:
            - /dev/video0
        image: rkramesh/motioneye:latest
 
           
    pyup:
       container_name: pyup
       ports:
           - '8000:8033'
       volumes:
           - '/root:/root'
           - '/media:/media'
       image: rkramesh/pyup
       restart: on-failure
    dockerbot:
      image: rkramesh/dockerbot:shellv3
      container_name: dockerbot
      network_mode: host
      cap_add:
         - NET_ADMIN
      privileged: true
      restart: unless-stopped
      environment:
        - API_KEY=${INFO_BOT_TOKEN}
        - ALLOWED_IDS=${CHAT_ID}
      volumes:
         - /var/run/docker.sock:/var/run/docker.sock
         - '/etc/localtime:/etc/localtime:ro'
         - '/etc/timezone:/etc/timezone:ro'
         - /media:/media
         - /proc/sysrq-trigger:/sysrq
    metube:
      hostname: rktube
      image: ghcr.io/alexta69/metube
      container_name: rktube
      restart: unless-stopped
      privileged: true
      ports:
        - "8081:8081"
      volumes:
        - /media:/downloads  
